import React, { useState } from "react";
import { Target, Clock, Brain, Loader } from "lucide-react";
import { aiAPI } from "../../services/api";
import toast from "react-hot-toast";

const AIRoadmapSection: React.FC = () => {
  const [formData, setFormData] = useState({
    domain: "",
    timeframe: "",
    currentLevel: "",
    goals: "",
  });
  const [roadmap, setRoadmap] = useState<string[]>([]);
  const [loading, setLoading] = useState(false);
  const [showRoadmap, setShowRoadmap] = useState(false);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();

    if (!formData.domain.trim()) {
      toast.error("Please enter a domain to learn");
      return;
    }

    if (!formData.timeframe.trim()) {
      toast.error("Please enter a time period");
      return;
    }

    setLoading(true);

    try {
      // Debug: Check token before making the request
      const token = localStorage.getItem("token");
      const user = localStorage.getItem("user");

      console.log("Debug - Token exists:", !!token);
      console.log("Debug - User exists:", !!user);
      console.log(
        "Debug - Token value:",
        token ? token.substring(0, 20) + "..." : "null"
      );

      if (!token) {
        toast.error("No authentication token found. Please log in again.");
        return;
      }

      // Send only the fields expected by the backend
      const requestData = {
        domain: formData.domain,
        timeframe: formData.timeframe,
        difficulty: "MEDIUM", // Default difficulty since it's required by backend
      };

      console.log(
        "Debug - Sending request to /api/ai/roadmap with data:",
        requestData
      );

      const response = await aiAPI.generateRoadmap(requestData);

      console.log("Debug - Response received:", response);

      if (!response.data.roadmap || response.data.roadmap.length === 0) {
        throw new Error("No roadmap generated by AI");
      }

      setRoadmap(response.data.roadmap);
      setShowRoadmap(true);
      toast.success("AI-powered roadmap generated successfully!");
    } catch (error: any) {
      console.error("AI Roadmap Error Details:", {
        message: error.message,
        status: error.response?.status,
        statusText: error.response?.statusText,
        data: error.response?.data,
        headers: error.response?.headers,
      });

      // Check if it's an authentication error
      if (error.response?.status === 401) {
        toast.error("Authentication failed. Your session may have expired.");
        console.log("Debug - 401 error, redirecting to login...");
      } else if (error.response?.status === 403) {
        toast.error("You do not have permission to generate roadmaps.");
      } else if (error.response?.status === 500) {
        toast.error("Server error. Please check if the backend is running.");
      } else if (
        error.code === "NETWORK_ERROR" ||
        error.message.includes("Network Error")
      ) {
        toast.error(
          "Cannot connect to server. Please check if the backend is running on port 8080."
        );
      } else if (error.response?.data?.message) {
        toast.error(error.response.data.message);
      } else {
        toast.error(`Failed to generate AI roadmap: ${error.message}`);
      }
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="p-8">
      <div className="mb-8">
        <h1 className="text-3xl font-bold text-gray-900 mb-2">
          AI Learning Roadmap
        </h1>
        <p className="text-gray-600">
          Generate personalized learning paths with advanced AI assistance
        </p>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
        {/* Enhanced Form */}
        <div className="bg-white rounded-lg shadow-md p-6">
          <div className="flex items-center justify-center mb-6">
            <div className="w-12 h-12 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center">
              <Brain className="w-6 h-6 text-white" />
            </div>
          </div>

          <h2 className="text-xl font-semibold text-gray-900 mb-6 text-center">
            AI-Powered Roadmap Generator
          </h2>

          <form onSubmit={handleSubmit} className="space-y-6">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Domain to Learn
              </label>
              <input
                type="text"
                value={formData.domain}
                onChange={(e) =>
                  setFormData({ ...formData, domain: e.target.value })
                }
                className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
                placeholder="e.g., Full Stack Development, Data Science, Machine Learning"
                required
              />
              <p className="text-xs text-gray-500 mt-1">
                AI will create a comprehensive learning path for this domain
              </p>
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Current Knowledge Level
              </label>
              <input
                type="text"
                value={formData.currentLevel}
                onChange={(e) =>
                  setFormData({ ...formData, currentLevel: e.target.value })
                }
                className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
                placeholder="e.g., Complete beginner, Some HTML/CSS, Intermediate Python"
                required
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Learning Goals
              </label>
              <textarea
                value={formData.goals}
                onChange={(e) =>
                  setFormData({ ...formData, goals: e.target.value })
                }
                className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
                rows={3}
                placeholder="e.g., Build web applications, Get a job as a developer, Create ML models"
                required
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                Time Period
              </label>
              <input
                type="text"
                value={formData.timeframe}
                onChange={(e) =>
                  setFormData({ ...formData, timeframe: e.target.value })
                }
                className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
                placeholder="e.g., 3 months, 6 weeks, 1 year"
                required
              />
            </div>

            <button
              type="submit"
              disabled={loading}
              className="w-full bg-gradient-to-r from-blue-600 to-purple-600 text-white py-3 rounded-lg font-semibold hover:from-blue-700 hover:to-purple-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all"
            >
              {loading ? (
                <div className="flex items-center justify-center">
                  <Loader className="animate-spin h-5 w-5 mr-3" />
                  AI is creating your roadmap...
                </div>
              ) : (
                "Generate AI Roadmap"
              )}
            </button>
          </form>
        </div>

        {/* Enhanced Roadmap Display */}
        <div className="bg-white rounded-lg shadow-md p-6">
          <h2 className="text-xl font-semibold text-gray-900 mb-6 flex items-center">
            <Brain className="w-5 h-5 mr-2 text-blue-600" />
            {showRoadmap
              ? "Your AI-Generated Learning Path"
              : "AI Learning Path Generator"}
          </h2>

          {showRoadmap && (
            <div className="bg-blue-50 rounded-lg p-4 mb-6">
              <h3 className="font-medium text-blue-800 mb-2">AI Insights</h3>
              <p className="text-blue-700 text-sm">
                AI has analyzed your requirements and created a personalized
                learning path for {formData.domain}
                to be completed in {formData.timeframe}.
              </p>
            </div>
          )}

          {roadmap.length > 0 ? (
            <div className="space-y-4">
              {roadmap.map((step, index) => (
                <div
                  key={index}
                  className="flex items-start group hover:bg-gray-50 p-3 rounded-lg transition-colors"
                >
                  <div className="flex-shrink-0 w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-600 text-white rounded-full flex items-center justify-center text-sm font-semibold mr-4">
                    {index + 1}
                  </div>
                  <div className="flex-1">
                    <p className="text-gray-800 leading-relaxed group-hover:text-gray-900">
                      {step}
                    </p>
                    <div className="mt-2 flex items-center text-xs text-gray-500">
                      <Clock className="w-3 h-3 mr-1" />
                      <span>
                        Step {index + 1} of {roadmap.length}
                      </span>
                    </div>
                  </div>
                </div>
              ))}

              <div className="mt-6 p-4 bg-green-50 rounded-lg">
                <h3 className="font-medium text-green-800 mb-2 flex items-center">
                  <Target className="w-4 h-4 mr-2" />
                  Completion Goal
                </h3>
                <p className="text-green-700 text-sm">
                  This AI-generated roadmap is customized for your needs and
                  designed to help you master {formData.domain} within{" "}
                  {formData.timeframe}.
                </p>
              </div>
            </div>
          ) : (
            <div className="text-center py-12">
              <Brain className="w-16 h-16 text-gray-300 mx-auto mb-4" />
              <p className="text-gray-500">
                Fill out the form to generate your personalized AI roadmap
              </p>
              <p className="text-gray-400 text-sm mt-2">
                Google Gemini AI will analyze your requirements and create a
                customized learning path
              </p>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default AIRoadmapSection;
